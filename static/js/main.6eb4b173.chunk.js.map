{"version":3,"sources":["conditions.js","utils.js","PlanOut.js","AppContext.js","IntroView.js","ExperimentView.js","TimeoutButton.js","Slider.js","DecisionExperiment.js","AttentionCheck.js","ExplanationStage.js","SubmitPage.js","Table.js","DataNarrativeView.js","App.js","index.js"],"names":["DATA_CONDITION","DATA_GARBAGE_PP","DATA_GARBAGE_MM","DATA_NONE","ORDERING_DATA_GARBAGE_PP","ORDERING_DATA_GARBAGE_MM","QUESTION_DROPOUT_FIRST","ATTN1_COUNTERBALANCE","ATTN2_COUNTERBALANCE","ATTN3_COUNTERBALANCE","ATTN4_COUNTERBALANCE","AGREERAND_COUNTERBALANCE","randomString","Math","random","toString","slice","now","Date","getTime","easeInOutQuad","t","b","c","d","smoothScrollTo","elementID","y","document","getElementById","getBoundingClientRect","yOffset","window","pageYOffset","frame","animateScroll","newY","scrollTo","requestAnimationFrame","useSmoothScrollTo","elID","useEffect","oneWayHash","str","i","hash","length","charCodeAt","UnicornExperiment","this","setName","params","args","choices","set","PlanOut","Ops","Random","UniformChoice","unit","userId","Sample","unicorns","filter","u","dropout","draws","event","getDefaultParamNames","_exposureLogged","Experiment","randomExperiment","findExperiment","desiredDataCondition","exp","get","Error","_ExperimentFixtures","Object","defineProperty","AppContext","React","createContext","AppContextProvider","Provider","START","Consumer","useContextState","key","initialState","_useContext","useContext","appState","setAppState","setTracking","objectSpread","tracking","newVal","prevState","IntroView","_ref","hitAccepted","onComplete","_useContextState","_useContextState2","slicedToArray","consent","setConsent","_useState","useState","_useState2","showNextButton","setShowNextButton","_useState3","_useState4","windowOpen","setWindowOpen","timeout","setTimeout","clearTimeout","continueForm","showAgreeCSS","css","_templateObject","leadInText","react_default","a","createElement","className","_templateObject2","type","_templateObject3","checked","onChange","e","_templateObject4","onClick","disabled","react_new_window_default","onUnload","ConsentReader","fullscreen","openFormInNewWindow","_ref2","displayCSS","defaultStyle","_templateObject5","_templateObject6","_templateObject7","href","ExperimentView","children","id","ExperimentView_templateObject","TimeoutButton","state","ready","cancelCountdown","setReady","_this","setState","setNotReady","startTimer","prevProps","props","_this$props","objectWithoutProperties","isButtonDisabled","guardedOnClick","assign","Component","sliderStyle","Slider_templateObject","thumbStyle","Slider_templateObject2","nullThumbStyle","Slider_templateObject3","actualThumbStyle","Slider_templateObject4","trackStyle","Slider_templateObject5","style","Slider_templateObject6","Slider","value","setValue","_ref$min","min","_ref$max","max","internalSliderValue","setInternalValue","prevValue","setPrevValue","computeSliderValueFromMouse","bcr","target","x","left","sliderPct","clientX","width","toFixed","sliderClassName","classNames","onMouseMove","sliderValue","onMouseDown","DROPOUT","GRAD","UNSURE","SOMEWHAT","FAIRLY","VERY","CERTAIN","DecisionExperiment","experiment","onContinue","bet","setBet","_useContextState3","_useContextState4","confidence","setConfidence","_useContextState5","_useContextState6","confirmed","setConfirmed","_useContextState7","_useContextState8","agreeRand","setAgreeRand","setConfLevel","didSeeData","didNotSeeData","setAgreeRandReset","newAgree","confidenceLevel","investValid","confidenceValid","confidenceIsValid","allowContinue","startups","agreeRandOptions","calloutBoxStyle","Fragment","DecisionExperimentInput","newBet","DecisionExperimentConfidence","newConf","Message","DecisionConfirm","msg","TimeoutButton_TimeoutButton","DecisionExperiment_templateObject","grad","isDropoutFirst","isNaN","int","parseInt","_ref3","src_Slider","DecisionExperiment_templateObject2","_ref4","conf","_ref5","level","AttentionCheck","question","options","setter","concat","map","option","idx","text","AttentionChecks","_DATA_GARBAGE_PP$DATA","_DATA_GARBAGE_PP$DATA2","_DATA_GARBAGE_MM$DATA","onFinish","attn1","setAttn1","attn2","setAttn2","attn3","setAttn3","attn4","setAttn4","setAllCorrect","dataCondition","showedFounders","showedFounderType","foundersWhoDidWhat","readyToContinue","isNull","swapPair","arr","areAllCorrect","every","isCorrect","attn1Options","attn3CorrectOption","attn3IncorrectOption","attn2Options","attn3Options","attn4Options","ExplanationStage","setText","decision","pronounValidationError","_i","_triggers","trigger","match","RegExp","validateExplanation","ExplanationStage_templateObject","maxLength","validationCSS","ExplanationStage_templateObject2","SubmitPage","getExperiment","submitInputRef","useRef","iv","setInterval","current","clearInterval","_queryString$parse","queryString","parse","location","search","turkSubmitTo","initialStep","parsed","formAction","expConditions","getParams","conditions","omit","companies","founderInfo","company","join","allSubmitData","flatten","s","SubmitPage_templateObject","action","onSubmit","preventDefault","submit","entries","name","val","ref","Table","tableCSS","Table_templateObject","DataNarrativeView","narrative","dataTable","tableClass","DataNarrativeView_templateObject","data","row","founder","STEP_INTRO","STEP_PRE_EXPERIMENT_DATA","STEP_ATTENTION_CHECK","STEP_EXPERIMENT","STEP_EXPLANATION","STEP_FINAL","AppCSS","App_templateObject","App_templateObject2","App_templateObject3","ReactDOM","render","appStage","_useState5","process","_useState6","_useState7","_useState8","step","setStep","hitNotAccepted","assignmentId","undefined","workerId","hashedWorkerId","UA","btoa","navigator","userAgent","src_AttentionCheck"],"mappings":"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","file":"static/js/main.6eb4b173.chunk.js","sourcesContent":["// data conditions\nexport const DATA_CONDITION = \"DATA_CONDITION\";\nexport const DATA_GARBAGE_PP = \"DATA_GARBAGE_PP\";\nexport const DATA_GARBAGE_MM = \"DATA_GARBAGE_MM\";\nexport const DATA_NONE = \"DATA_NONE\";\n\n// conditions that determine order of data in the table\nexport const ORDERING_DATA_GARBAGE_PP = \"ORDERING_DATA_GARBAGE_PP\";\nexport const ORDERING_DATA_GARBAGE_MM = \"ORDERING_DATA_GARBAGE_MM\";\nexport const QUESTION_DROPOUT_FIRST = \"QUESTION_DROPOUT_FIRST\";\n\n// counterbalanced attention checks\nexport const ATTN1_COUNTERBALANCE = \"ATTN1_COUNTERBALANCE\";\nexport const ATTN2_COUNTERBALANCE = \"ATTN2_COUNTERBALANCE\";\nexport const ATTN3_COUNTERBALANCE = \"ATTN3_COUNTERBALANCE\";\nexport const ATTN4_COUNTERBALANCE = \"ATTN4_COUNTERBALANCE\";\nexport const AGREERAND_COUNTERBALANCE = \"AGREERAND_COUNTERBALANCE\";\n","import { useEffect } from \"react\";\n\nexport let strNonEmpty = v => v !== undefined && v !== null && v !== \"\";\n\nexport let strToNum = str =>\n  strNonEmpty(str) ? Number(str.replace(/,/g, \"\")) : NaN;\n\nexport let isNumber = str => !Number.isNaN(strToNum(str));\n\nexport let randomString = () =>\n  Math.random()\n    .toString(36)\n    .slice(2);\n\nexport function now() {\n  return new Date().getTime();\n}\n\n// thanks https://codepen.io/rebosante/pen/eENYBv\nlet easeInOutQuad = function(t, b, c, d) {\n  // t = current time\n  // b = start value\n  // c = change in value\n  // d = duration\n  t /= d / 2;\n  if (t < 1) return (c / 2) * t * t + b;\n  t--;\n  return (-c / 2) * (t * (t - 2) - 1) + b;\n};\n\nexport function smoothScrollTo(elementID) {\n  let el = document.getElementById(elementID);\n  let { y } = el.getBoundingClientRect();\n  // if element top is outside top of window\n  if (y < 0) {\n    let yOffset = window.pageYOffset;\n    let frame = 0;\n    let FRAMES = 20;\n\n    let animateScroll = function() {\n      let newY = easeInOutQuad(frame++, yOffset, y - 10, FRAMES);\n      window.scrollTo(0, newY);\n      if (frame < FRAMES) {\n        window.requestAnimationFrame(animateScroll);\n      }\n    };\n    animateScroll();\n  }\n}\n\nexport function useSmoothScrollTo(elID) {\n  useEffect(() => smoothScrollTo(elID), []);\n}\n\nexport function oneWayHash(str) {\n  // https://stackoverflow.com/a/7616484/818492\n  var hash = 0,\n    i,\n    chr;\n  for (i = 0; i < str.length; i++) {\n    chr = str.charCodeAt(i);\n    hash = (hash << 5) - hash + chr;\n    hash |= 0; // Convert to 32bit integer\n  }\n  return hash;\n}\n","import PlanOut from \"planout\";\nimport {\n  // condition names\n  DATA_CONDITION,\n  DATA_GARBAGE_MM,\n  DATA_GARBAGE_PP,\n  DATA_NONE,\n  ORDERING_DATA_GARBAGE_PP,\n  ORDERING_DATA_GARBAGE_MM,\n  QUESTION_DROPOUT_FIRST,\n  ATTN1_COUNTERBALANCE,\n  ATTN2_COUNTERBALANCE,\n  ATTN3_COUNTERBALANCE,\n  ATTN4_COUNTERBALANCE,\n  AGREERAND_COUNTERBALANCE\n} from \"./conditions\";\nimport { randomString } from \"./utils\";\nimport unicorns from \"./unicorns.json\";\n\nexport default class UnicornExperiment extends PlanOut.Experiment {\n  setup() {\n    this.setName(\"PredictingUnicorns\");\n  }\n\n  assign(params, args) {\n    let UniformChoice = choices =>\n      new PlanOut.Ops.Random.UniformChoice({\n        choices,\n        unit: args.userId\n      });\n\n    params.set(\n      DATA_CONDITION,\n      UniformChoice([DATA_GARBAGE_PP, DATA_NONE, DATA_GARBAGE_MM])\n    );\n    params.set(\n      ORDERING_DATA_GARBAGE_PP,\n      new PlanOut.Ops.Random.Sample({\n        choices: unicorns.filter(u => u.dropout === true),\n        draws: 5,\n        unit: args.userId\n      })\n    );\n    params.set(\n      ORDERING_DATA_GARBAGE_MM,\n      new PlanOut.Ops.Random.Sample({\n        choices: unicorns.filter(u => u.dropout === false),\n        draws: 5,\n        unit: args.userId\n      })\n    );\n    params.set(\n      QUESTION_DROPOUT_FIRST,\n      new PlanOut.Ops.Random.UniformChoice({\n        choices: [true, false],\n        unit: args.userId\n      })\n    );\n    params.set(\n      ATTN1_COUNTERBALANCE,\n      new PlanOut.Ops.Random.UniformChoice({\n        choices: [true, false],\n        unit: args.userId\n      })\n    );\n    params.set(\n      ATTN2_COUNTERBALANCE,\n      new PlanOut.Ops.Random.UniformChoice({\n        choices: [true, false],\n        unit: args.userId\n      })\n    );\n    params.set(\n      ATTN3_COUNTERBALANCE,\n      new PlanOut.Ops.Random.UniformChoice({\n        choices: [true, false],\n        unit: args.userId\n      })\n    );\n    params.set(\n      ATTN4_COUNTERBALANCE,\n      new PlanOut.Ops.Random.UniformChoice({\n        choices: [true, false],\n        unit: args.userId\n      })\n    );\n    params.set(\n      AGREERAND_COUNTERBALANCE,\n      new PlanOut.Ops.Random.UniformChoice({\n        choices: [true, false],\n        unit: args.userId\n      })\n    );\n  }\n\n  // boilerplate\n\n  configureLogger() {\n    return;\n  }\n\n  log(event) {\n    // console.log(event);\n  }\n\n  getParamNames() {\n    return this.getDefaultParamNames();\n  }\n\n  previouslyLogged() {\n    return this._exposureLogged;\n  }\n}\n\nexport function randomExperiment() {\n  return new UnicornExperiment({ userId: randomString() });\n}\n\nfunction findExperiment(desiredDataCondition) {\n  for (let i = 0; i < 100; i++) {\n    let exp = randomExperiment();\n    if (exp.get(DATA_CONDITION) === desiredDataCondition) {\n      return exp;\n    }\n  }\n  throw new Error(\"no experiment found\");\n}\n\nexport let ExperimentFixtures = {\n  // data conditions\n  [DATA_GARBAGE_PP]: findExperiment(DATA_GARBAGE_PP),\n  [DATA_GARBAGE_MM]: findExperiment(DATA_GARBAGE_MM),\n  [DATA_NONE]: findExperiment(DATA_NONE),\n  ANY: randomExperiment()\n};\n","import React, { useContext } from \"react\";\nimport { now } from \"./utils\";\n\nexport let AppContext = React.createContext({});\nexport let AppContextProvider = AppContext.Provider;\nexport let AppContextConsumer = AppContext.Consumer;\n\nlet START = \"Start\";\n\nexport function useContextState(key, initialState) {\n  let { appState, setAppState, setTracking } = useContext(AppContext);\n\n  if (!(key in appState)) {\n    setAppState(appState => ({ ...appState, [key]: initialState }));\n    // don't track time here since there was no interaction\n  }\n\n  setTracking(tracking => {\n    if (!(START in tracking)) {\n      return { ...tracking, [START]: now() };\n    } else {\n      return tracking;\n    }\n  });\n\n  let setter = newVal => {\n    setAppState(prevState => ({ ...prevState, [key]: newVal }));\n    setTracking(tracking => ({ ...tracking, [key]: now() }));\n  };\n  let value = key in appState ? appState[key] : initialState;\n  return [value, setter];\n}\n\nexport function useReadContext(key) {\n  let { appState } = useContext(AppContext);\n  return appState[key];\n}\n","import React, { useState, useEffect } from \"react\";\nimport NewWindow from \"react-new-window\";\nimport { css } from \"emotion\";\nimport { useContextState } from \"./AppContext\";\n\nexport default function IntroView({ hitAccepted, onComplete }) {\n  let [consent, setConsent] = useContextState(\"IntroConsentObtained\", null);\n  let [showNextButton, setShowNextButton] = useState(false);\n  let [windowOpen, setWindowOpen] = useState(false);\n  useEffect(() => {\n    let timeout;\n    if (!showNextButton) {\n      let showNextTimeout = process.env.REACT_APP_DEV === \"true\" ? 500 : 5000;\n      timeout = setTimeout(() => setShowNextButton(true), showNextTimeout);\n    }\n    return () => clearTimeout(timeout);\n  }, []);\n\n  let showAgreeCSS = css`\n    ${showNextButton ? `opacity: 1` : `opacity: 0; visibility: hidden`};\n    transition: opacity 0.5s ease-in;\n  `;\n\n  let continueForm;\n  if (hitAccepted) {\n    let leadInText = showNextButton ? (\n      <b>Do you understand and consent to these terms?</b>\n    ) : (\n      <i>Please read carefully before continuing.</i>\n    );\n    continueForm = (\n      <div\n        className={css`\n          label {\n            margin-right: 30px;\n          }\n        `}\n      >\n        {leadInText}\n        <div className={showAgreeCSS}>\n          <p>\n            <label>\n              <input\n                type=\"checkbox\"\n                className={css`\n                  margin-right: 5px;\n                `}\n                checked={consent === true}\n                onChange={e => setConsent(true)}\n              />\n              I agree to this consent form\n            </label>\n            <label>\n              <input\n                type=\"checkbox\"\n                className={css`\n                  margin-right: 5px;\n                `}\n                checked={consent === false}\n                onChange={e => setConsent(false)}\n              />\n              No thanks, I do not want to do this task\n            </label>\n          </p>\n          <div>\n            <button onClick={onComplete} disabled={!consent}>\n              Continue\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    continueForm = (\n      <p>\n        <b>You must accept this HIT before you can continue.</b>\n        {process.env.REACT_APP_DEV === \"true\" ? (\n          <>\n            {\" \"}\n            (We are currently in debug mode: click the \"Add random HIT\n            parameters\" to continue)\n          </>\n        ) : null}\n      </p>\n    );\n  }\n\n  return (\n    <div>\n      {windowOpen ? (\n        <NewWindow onUnload={() => setWindowOpen(false)}>\n          <ConsentReader fullscreen />\n        </NewWindow>\n      ) : null}\n      <ConsentReader\n        fullscreen={false}\n        openFormInNewWindow={() => setWindowOpen(true)}\n      />\n      {continueForm}\n    </div>\n  );\n}\n\nfunction ConsentReader({ openFormInNewWindow, fullscreen }) {\n  let defaultStyle = css`\n    h2 {\n      font-size: 21px;\n      margin-bottom: 5px;\n    }\n    h3 {\n      font-size: 16px;\n      margin-bottom: 3px;\n    }\n    p {\n      margin-top: 0;\n    }\n    button {\n      border: none;\n      background: none;\n      text-decoration: underline;\n      font-size: 100%;\n      margin: 0;\n      padding: 0;\n      color: blue;\n    }\n  `;\n\n  let displayCSS;\n  if (!fullscreen) {\n    // put most of the form in a scrollable window\n    displayCSS = css`\n      overflow-y: auto;\n      max-height: 350px;\n      border: 1px solid #999999;\n      box-shadow: inset 0px 0px 4px 1px rgba(0, 0, 0, 0.2);\n      padding: 5px;\n      h2:first-child {\n        margin-top: 0;\n      }\n    `;\n  }\n  return (\n    <div\n      className={css`\n        ${defaultStyle} ${fullscreen ? \"margin:1em\" : null}\n      `}\n    >\n      <h2>Introduction</h2>\n      <p>\n        Thank you for taking the time to consider volunteering in a Microsoft\n        Corporation research project. This form explains what would happen if\n        you join this research project. Please read it carefully and take as\n        much time as you need. Email the study team to ask about anything that\n        is not clear. Participation in this study is voluntary and you may\n        withdraw at any time.\n      </p>\n      <div className={displayCSS}>\n        <h2>Title of research project</h2>\n        <p>Predicting Unicorns</p>\n        <h3>Principal Investigator: Dan Goldstein</h3>\n        <h2>Purpose</h2>\n        The purpose of this project is to study decision making.\n        <h2>Procedures</h2>\n        <p>\n          During this project, you will read some information about startup\n          companies and be asked a few questions about investing in startup\n          companies.\n        </p>\n        <p>\n          Microsoft may document and collect information about your\n          participation by recording your answers to multiple choice and free\n          response questions.\n        </p>\n        <p>Approximately 1,000 participants will be involved in this study.</p>\n        <h2>Personal information </h2>\n        <div>\n          <p>\n            Aside from your Mechanical Turk ID, no personal information will be\n            collected during this study. Your Mechanical Turk ID will not be\n            shared outside of Microsoft Research and the confines of this study\n            without your permission, and will be promptly deleted after\n            compensation has been successfully provided (30 days or less).\n            De-identified data may be used for future research or given to\n            another investigator for future use without additional consent.\n          </p>\n          <ul>\n            <li>\n              Microsoft Research is ultimately responsible for determining the\n              purposes and uses of data collected through this study.\n            </li>\n          </ul>\n          <p>\n            For additional information or concerns about how Microsoft handles\n            your personal information, please see the{\" \"}\n            <a href=\"https://privacy.microsoft.com/en-us/privacystatement\">\n              Microsoft Privacy Statement\n            </a>{\" \"}\n            (\n            <a href=\"https://privacy.microsoft.com/en-us/privacystatement\">\n              https://privacy.microsoft.com/en-us/privacystatement\n            </a>\n            ).\n          </p>\n        </div>\n        <h2>Benefits and risks</h2>\n        <p>\n          <b>Benefits:</b>\n          {\"  \"}There are no direct benefits to you that might reasonably be\n          expected as a result of being in this study. The research team expects\n          to learn about human decision making from the results of this\n          research, as well as any public benefit that may come from these\n          research results being shared with the greater scientific community.\n        </p>\n        <p>\n          <b>Risks:</b>\n          {\"  \"}If you are unable to submit a HIT due to technical difficulties\n          on your end there is a risk of loss of payment. To mitigate\n          participants can reach out to the research team for input on resolving\n          any difficulties encountered.\n        </p>\n        <h2>Payment for participation</h2>\n        <p>\n          You will receive $0.50 after completing the entire study, with the\n          potential for a bonus of up to $1.00 on the basis of the outcome of a\n          decision made in the experiment.\n        </p>\n        <p>\n          Your data and/or samples may be used to make new products, tests or\n          findings. These may have value and may be developed and owned by\n          Microsoft and/or others. If this happens, there are no plans to pay\n          you.\n        </p>\n        <h2>Contact information</h2>\n        <p>\n          Should you have any questions concerning this project, or if you are\n          injured as a result of being in this study, please contact us at{\" \"}\n          <a href=\"mailto:dgg@microsoft.com\">dgg@microsoft.com</a>.\n        </p>\n        <p>\n          Should you have any questions about your rights as a research subject,\n          please contact Microsoft Research Ethics Program Feedback at{\" \"}\n          <a href=\"mailto:MSRStudyfeedback@microsoft.com\">\n            MSRStudyfeedback@microsoft.com\n          </a>\n          .\n        </p>\n      </div>\n      <h2>Consent</h2>\n      <p>\n        By clicking “I agree” below, you confirm that the study was explained to\n        you, you had a chance to ask questions before beginning the study, and\n        all your questions were answered satisfactorily. By clicking “I agree”\n        below, you voluntarily consent to participate, and you do not give up\n        any legal rights you have as a study participant.\n      </p>\n      {!fullscreen && (\n        <p>\n          <button onClick={openFormInNewWindow}>Clicking here</button> will open\n          a separate window where you may print out or save this form.\n        </p>\n      )}\n      <p>\n        On behalf of Microsoft, we thank you for your contribution and look\n        forward to your research session.\n      </p>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { css } from \"emotion\";\nimport { smoothScrollTo } from \"./utils\";\n\nexport default function ExperimentView({ children }) {\n  useEffect(() => smoothScrollTo(\"ExperimentView\"), []);\n  return (\n    <div id=\"ExperimentView\">\n      <p>Welcome to this HIT about predicting the success of startups.</p>\n      <p>\n        A startup is a small, young company that is intended to grow rapidly and\n        to become large and influential. They are typically backed by venture\n        capital (V.C.) firms. The people who create startups are called\n        founders. A \"unicorn\" is a startup that has achieved a valuation of 1\n        billion dollars or more.\n      </p>\n      <div\n        className={css`\n          margin: 1.5em 0;\n          padding: 0.5em 0;\n          border-top: 1px solid #ccc;\n        `}\n      >\n        {children}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default class TimeoutButton extends React.Component {\n  state = { ready: false };\n  cancelCountdown = null;\n\n  componentDidMount() {\n    this.startTimer(null);\n  }\n\n  componentDidUpdate(prevProps) {\n    this.startTimer(prevProps);\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.cancelCountdown);\n  }\n\n  setReady = () => this.setState({ ready: true });\n\n  setNotReady = () => this.setState({ ready: false });\n\n  startTimer(prevProps) {\n    if (!this.props.disabled && !this.state.ready) {\n      this.cancelCountdown = setTimeout(this.setReady, this.props.timeout);\n    } else if (this.props.disabled && this.cancelCountdown !== null) {\n      clearTimeout(this.cancelCountdown);\n      this.cancelCountdown = null;\n      this.setNotReady();\n    }\n  }\n\n  render() {\n    let { disabled, timeout, onClick, ...props } = this.props;\n    let { ready } = this.state;\n    let isButtonDisabled = disabled || !ready;\n    let guardedOnClick = isButtonDisabled ? () => {} : onClick;\n    return (\n      <button {...props} disabled={isButtonDisabled} onClick={guardedOnClick} />\n    );\n  }\n}\n","import React, { useState } from \"react\";\nimport classNames from \"classnames\";\nimport { css } from \"emotion\";\n\nfunction Slider({ value, setValue, min = 0, max = 100 }) {\n  let [internalSliderValue, setInternalValue] = useState(value);\n  let [prevValue, setPrevValue] = useState(null);\n  if (prevValue !== value) {\n    setInternalValue(value); // derived state from props\n    setPrevValue(value);\n  }\n\n  function computeSliderValueFromMouse(e) {\n    let bcr = e.target.getBoundingClientRect();\n    //\n    //           |<---------bcr.width-------->|\n    //            ____________________________\n    //           |                            |\n    // |<-bcr.x->|     + e.clientX            |\n    //           |____________________________|\n    //\n    let x = bcr.x || bcr.left;\n    let sliderPct = (e.clientX - x) / bcr.width;\n    let range = max - min;\n    let sliderValue = (min + range * sliderPct).toFixed(0);\n    return sliderValue;\n  }\n\n  let sliderClassName = classNames(\n    \"slider\",\n    value === null ? \"null\" : \"value-set\"\n  );\n\n  return (\n    <div className={style}>\n      <input\n        type=\"range\"\n        value={internalSliderValue || \"0\"}\n        className={sliderClassName}\n        min={min}\n        max={max}\n        onMouseMove={e => {\n          if (value === null) {\n            let sliderValue = computeSliderValueFromMouse(e);\n            // set the internal value to set hover position\n            setInternalValue(sliderValue);\n          }\n        }}\n        onMouseDown={e => {\n          if (value === null) {\n            let sliderValue = computeSliderValueFromMouse(e);\n            // set the actual slider value\n            setValue(sliderValue);\n          }\n        }}\n        onChange={e => setValue(e.target.value)}\n      />\n    </div>\n  );\n}\n\n// thanks https://www.quirksmode.org/blog/archives/2015/11/styling_and_scr.html\nlet sliderStyle = css`\n  width: 99%;\n  outline: none;\n`;\nlet thumbStyle = css`\n  width: 16px;\n  height: 16px;\n  margin-top: -7px;\n  border-radius: 50%;\n  &:hover {\n    cursor: pointer;\n  }\n`;\nlet nullThumbStyle = css`\n  border: 2px dotted black;\n  background-color: rgba(255, 255, 255, 0.8);\n`;\nlet actualThumbStyle = css`\n  border: 2px solid black;\n  background-color: #f6f6f6;\n`;\nlet trackStyle = css`\n  width: 100%;\n  height: 6px;\n  background: #999999;\n  border-radius: 6px;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nlet style = css`\n  input[type=\"range\"] {\n    -webkit-appearance: none;\n    height: 25px; /* pick your own value */\n    padding: 0;\n    background: none;\n    ${sliderStyle};\n\n    &.null {\n      &::-webkit-slider-thumb {\n        -webkit-appearance: none;\n        box-sizing: content-box;\n      }\n      &::-moz-range-thumb {\n        opacity: 0;\n      }\n      &::-ms-thumb {\n        opacity: 0;\n      }\n      /* IE11 blue infill to the left of the thumb, hide until set */\n      &::-ms-fill-lower {\n        background-color: #999999; /* colour of the track */\n      }\n      &:hover {\n        &::-webkit-slider-thumb {\n          -webkit-appearance: none;\n          box-sizing: content-box;\n          ${thumbStyle};\n          ${nullThumbStyle};\n        }\n        &::-moz-range-thumb {\n          opacity: 1;\n          ${thumbStyle};\n          ${nullThumbStyle};\n        }\n        &::-ms-thumb {\n          /* should come after -webkit- */\n          opacity: 1;\n          ${thumbStyle};\n          ${nullThumbStyle};\n          /* may require different margins */\n        }\n      }\n    }\n    &.value-set {\n      &::-webkit-slider-thumb {\n        -webkit-appearance: none;\n        box-sizing: content-box;\n        ${thumbStyle};\n        ${actualThumbStyle};\n      }\n      &::-moz-range-thumb {\n        ${thumbStyle};\n        ${actualThumbStyle};\n      }\n      &::-ms-thumb {\n        /* should come after -webkit- */\n        ${thumbStyle};\n        ${actualThumbStyle};\n        /* may require different margins */\n      }\n    }\n\n    &::-webkit-slider-runnable-track {\n      ${trackStyle};\n    }\n\n    &::-moz-range-track {\n      ${trackStyle};\n    }\n\n    &::-ms-track {\n      /* should come after -webkit- */\n      border-color: transparent;\n      color: transparent;\n      ${trackStyle};\n    }\n\n    /* prevent tooltips which show the numeric slider value on old windows */\n    &::-ms-tooltip {\n      display: none;\n    }\n  }\n`;\n\nexport default Slider;\n","import React, { useEffect } from \"react\";\nimport { css } from \"emotion\";\nimport {\n  DATA_CONDITION,\n  DATA_NONE,\n  QUESTION_DROPOUT_FIRST,\n  AGREERAND_COUNTERBALANCE\n} from \"./conditions\";\nimport TimeoutButton from \"./TimeoutButton\";\nimport { useContextState } from \"./AppContext\";\nimport { useSmoothScrollTo } from \"./utils\";\nimport Slider from \"./Slider\";\n\nconst DROPOUT = \"dropout\";\nconst GRAD = \"graduate\";\n\nconst UNSURE = \"unsure\";\nconst SOMEWHAT = \"somewhat\";\nconst FAIRLY = \"fairly\";\nconst VERY = \"very\";\nconst CERTAIN = \"certain\";\n\nexport default function DecisionExperiment({ experiment, onContinue }) {\n  let [bet, setBet] = useContextState(\"DecisionBet\", null);\n  let [confidence, setConfidence] = useContextState(\"DecisionConfidence\", null);\n  let [confirmed, setConfirmed] = useContextState(\"DecisionConfirmed\", false);\n  let [agreeRand, setAgreeRand] = useContextState(\"DecisionAgreeRand\", null);\n  let setConfLevel = useContextState(\"DecisionConfidenceLevel\")[1];\n  let dataCondition = experiment.get(DATA_CONDITION);\n  let didSeeData = dataCondition !== DATA_NONE;\n  let didNotSeeData = !didSeeData;\n\n  useSmoothScrollTo(\"DecisionExperiment\");\n\n  useEffect(() => setConfLevel(confidenceLevel(confidence)), [confidence]);\n\n  function setAgreeRandReset(newAgree) {\n    setAgreeRand(newAgree);\n    setBet(null);\n    setConfidence(null);\n    setConfirmed(false);\n  }\n  function setBetReset(newBet) {\n    setBet(newBet);\n    setConfidence(null);\n    setConfirmed(false);\n  }\n  function setConfidenceReset(newConf) {\n    setConfidence(newConf);\n    setConfirmed(false);\n  }\n\n  let investValid = bet !== null;\n  let confidenceValid = confidenceIsValid(confidence);\n  let allowContinue = investValid && confidenceValid && confirmed;\n\n  let startups = \"two other startups\";\n  if (didNotSeeData) {\n    startups = \"two startups\";\n  }\n\n  let agreeRandOptions = [\n    <div className={agreeRand === true ? \"selected\" : null} key=\"true\">\n      <label>\n        <input\n          className=\"agreeRandTrue\"\n          type=\"radio\"\n          onChange={e => setAgreeRandReset(true)}\n          checked={agreeRand === true}\n        />\n        True\n      </label>\n    </div>,\n    <div className={agreeRand === false ? \"selected\" : null} key=\"false\">\n      <label>\n        <input\n          type=\"radio\"\n          onChange={e => setAgreeRandReset(false)}\n          checked={agreeRand === false}\n        />\n        False\n      </label>\n    </div>\n  ];\n  if (experiment.get(AGREERAND_COUNTERBALANCE)) {\n    agreeRandOptions = [agreeRandOptions[1], agreeRandOptions[0]];\n  }\n\n  return (\n    <div id=\"DecisionExperiment\">\n      <p>\n        Now we are going to give you information about {startups} and ask you to\n        predict which startup is more likely to be a unicorn. You may receive a\n        HIT bonus of $1.00 based on your decision.\n      </p>\n      <p>\n        We have a database of all types of startup companies, with data about\n        many features of the companies, and whether they became unicorns or not.\n        We also have data on the founders of these companies, and whether or not\n        these founders graduated or dropped out of college.\n      </p>\n      <p>\n        Now, completely at random, we will pick a company with a dropout founder\n        from our database, and a company with a graduate founder from our\n        database\n        {didSeeData ? \" (excluding the companies in the table above).\" : \".\"}\n      </p>\n      <p>\n        You must decide to bet on one of these two companies. If the company you\n        bet on is a unicorn then in addition to your HIT payment, you’ll get a{\" \"}\n        <b>bonus of $1.00</b> — if it is not a unicorn, you won’t get a bonus.\n      </p>\n      <div className={calloutBoxStyle}>\n        <div className=\"msg\">\n          {didSeeData ? (\n            <>\n              These two companies will be randomly sampled from our database,\n              and do not include any of the companies we showed in the table\n              above:\n            </>\n          ) : (\n            <>These two companies will be randomly sampled from our database:</>\n          )}\n          {agreeRandOptions}\n        </div>\n      </div>\n      {agreeRand !== null ? (\n        <>\n          <p>\n            <b>Which startup is more likely to be a unicorn?</b>\n          </p>\n          <DecisionExperimentInput\n            bet={bet}\n            setBet={setBetReset}\n            experiment={experiment}\n          />\n        </>\n      ) : null}\n      {investValid ? (\n        <>\n          <p>\n            <b>How confident are you in this decision?</b>\n          </p>\n          <DecisionExperimentConfidence\n            confidence={confidence}\n            setConfidence={setConfidenceReset}\n            bet={bet}\n          />\n        </>\n      ) : null}\n      {confidenceValid ? (\n        <>\n          <Message bet={bet} confidence={confidence} />\n          <DecisionConfirm\n            msg={\n              <i>\n                Click “Confirm” below if this is what you want, or update your\n                answer.\n              </i>\n            }\n            confirmed={confirmed}\n            setConfirmed={setConfirmed}\n          />\n        </>\n      ) : null}\n      {allowContinue && (\n        <p>\n          Within a few days of completing this HIT, you will be paid a bonus if\n          the company you chose becomes successful based on a random draw.\n        </p>\n      )}\n      <p>\n        <TimeoutButton\n          onClick={onContinue}\n          disabled={!allowContinue}\n          timeout={process.env.REACT_APP_DEV === \"true\" ? 500 : 3000}\n        >\n          Continue\n        </TimeoutButton>\n      </p>\n    </div>\n  );\n}\n\nexport let calloutBoxStyle = css`\n  margin: 10px 0;\n  border: 1px solid #bfbfbf;\n  border-radius: 10px;\n  background: #f7f7f7;\n  padding: 1em;\n  div {\n    margin: 5px 0;\n    label {\n      &:hover {\n        cursor: pointer;\n      }\n      input {\n        margin-right: 8px;\n      }\n    }\n    &.selected {\n      font-weight: bold;\n    }\n    &.msg {\n      max-width: 70%;\n    }\n  }\n`;\n\nfunction DecisionExperimentInput({ bet, setBet, experiment }) {\n  let dropout = (\n    <div className={bet === DROPOUT ? \"selected\" : null}>\n      <label>\n        <input\n          type=\"radio\"\n          value={DROPOUT}\n          onChange={e => setBet(DROPOUT)}\n          checked={bet === DROPOUT}\n        />\n        The startup with a dropout founder\n      </label>\n    </div>\n  );\n\n  let grad = (\n    <div className={bet === GRAD ? \"selected\" : null}>\n      <label>\n        <input\n          type=\"radio\"\n          value={GRAD}\n          onChange={e => setBet(GRAD)}\n          checked={bet === GRAD}\n        />\n        The startup with a graduate founder\n      </label>\n    </div>\n  );\n\n  let isDropoutFirst = experiment.get(QUESTION_DROPOUT_FIRST);\n  return (\n    <div className={calloutBoxStyle}>\n      {isDropoutFirst ? (\n        <>\n          {dropout}\n          {grad}\n        </>\n      ) : (\n        <>\n          {grad}\n          {dropout}\n        </>\n      )}\n    </div>\n  );\n}\n\nfunction confidenceIsValid(confidence) {\n  let nan = confidence === null || isNaN(confidence);\n  if (nan) {\n    return false;\n  }\n  let int = parseInt(confidence, 10);\n  if (isNaN(int)) {\n    return false;\n  }\n  return true;\n}\n\nfunction DecisionExperimentConfidence({ confidence, setConfidence, bet }) {\n  return (\n    <div className={calloutBoxStyle}>\n      <p>\n        {!confidenceIsValid(confidence) ? (\n          <i>\n            Please indicate your confidence by clicking on the slider below. You\n            may click anywhere on the slider.\n          </i>\n        ) : (\n          <i>You can change your response by dragging the slider.</i>\n        )}\n      </p>\n      <Slider value={confidence} setValue={setConfidence} />\n      <table\n        className={css`\n          table-layout: fixed;\n          width: 100%;\n          td.align {\n            width: 35%;\n            vertical-align: top;\n          }\n          td.align-right {\n            text-align: right;\n          }\n        `}\n      >\n        <tbody>\n          <tr>\n            <td className=\"align align-left\">&uarr;</td>\n            <td />\n            <td className=\"align align-right\">&uarr;</td>\n          </tr>\n          <tr>\n            <td className=\"align align-left\">\n              <b>Completely unsure</b> which startup is more likely to be a\n              unicorn\n            </td>\n            <td> </td>\n            <td className=\"align align-right\">\n              <b>Absolutely certain</b> that the startup with the{\" \"}\n              <b>{bet} founder</b> is more likely to become a unicorn\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nfunction DecisionConfirm({ confirmed, setConfirmed, msg }) {\n  return (\n    <div className={calloutBoxStyle}>\n      {msg ? <div className=\"msg\">{msg}</div> : null}\n      <div className={confirmed ? \"selected\" : null}>\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={confirmed}\n            onChange={e => setConfirmed(!confirmed)}\n          />{\" \"}\n          Confirm\n        </label>\n      </div>\n    </div>\n  );\n}\n\nfunction confidenceLevel(conf) {\n  if (conf === null) {\n    return null;\n  }\n  let confidence = parseInt(conf, 10);\n  if (confidence === 0) {\n    return UNSURE;\n  } else if (confidence < 33) {\n    return SOMEWHAT;\n  } else if (confidence < 67) {\n    return FAIRLY;\n  } else if (confidence <= 99) {\n    return VERY;\n  } else {\n    return CERTAIN;\n  }\n}\n\nfunction Message({ bet, confidence }) {\n  let level = confidenceLevel(confidence);\n\n  let msg;\n  if (confidence === null) {\n    msg = \"you did not provide a confidence level\";\n  } else if (level === UNSURE) {\n    msg = (\n      <>\n        <b>you are completely unsure</b> which startup is more likely to become\n        a unicorn\n      </>\n    );\n  } else if (level === CERTAIN) {\n    msg = (\n      <>\n        <b>you are absolutely certain</b> that the startup with the {bet}{\" \"}\n        founder is more likely to become a unicorn\n      </>\n    );\n  } else {\n    msg = (\n      <>\n        <b>you are {level} confident</b> that the startup with the {bet} founder\n        is more likely to become a unicorn\n      </>\n    );\n  }\n\n  return (\n    <p>\n      Your responses indicate that you would bet on the startup with the {bet}{\" \"}\n      founder and {msg}.\n    </p>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport isNull from \"lodash/isNull\";\nimport {\n  DATA_CONDITION,\n  DATA_NONE,\n  DATA_GARBAGE_PP,\n  DATA_GARBAGE_MM,\n  ATTN1_COUNTERBALANCE,\n  ATTN2_COUNTERBALANCE,\n  ATTN3_COUNTERBALANCE,\n  ATTN4_COUNTERBALANCE\n} from \"./conditions\";\nimport { useContextState } from \"./AppContext\";\nimport { useSmoothScrollTo } from \"./utils\";\nimport { calloutBoxStyle } from \"./DecisionExperiment\";\nimport TimeoutButton from \"./TimeoutButton\";\n\nfunction AttentionChecks({ experiment, onFinish }) {\n  let [attn1, setAttn1] = useContextState(\"Attn1\", null);\n  let [attn2, setAttn2] = useContextState(\"Attn2\", null);\n  let [attn3, setAttn3] = useContextState(\"Attn3\", null);\n  let [attn4, setAttn4] = useContextState(\"Attn4\", null);\n  let setAllCorrect = useContextState(\"AllAttnCorrect\", null)[1];\n  let dataCondition = experiment.get(DATA_CONDITION);\n  let didSeeData = dataCondition !== DATA_NONE;\n  let showedFounders = {\n    [DATA_GARBAGE_PP]: \"dropouts\",\n    [DATA_GARBAGE_MM]: \"graduates\"\n  }[dataCondition];\n  let showedFounderType = {\n    [DATA_GARBAGE_PP]: \"dropout\",\n    [DATA_GARBAGE_MM]: \"graduate\"\n  }[dataCondition];\n  let foundersWhoDidWhat = {\n    // this is the OPPOSITE of what data they saw\n    [DATA_GARBAGE_MM]: \"dropped out of\",\n    [DATA_GARBAGE_PP]: \"graduated from\"\n  }[dataCondition];\n\n  let readyToContinue = didSeeData ? !isNull(attn4) : !isNull(attn3);\n\n  useSmoothScrollTo(\"AttentionCheck\");\n\n  useEffect(() => {\n    let attnChecks = didSeeData ? [attn1, attn2, attn3, attn4] : [attn1, attn3];\n    let areAllCorrect = attnChecks.every(a => a && a.isCorrect);\n    setAllCorrect(areAllCorrect);\n  }, [attn1, attn2, attn3, attn4]);\n\n  //\n  // computing attention check counterbalances\n  //\n\n  function swapPair(arr) {\n    return [arr[1], arr[0]];\n  }\n\n  // attn1\n\n  let attn1Options = [\n    { text: \"a valuation of $100,000 or more\", isCorrect: false },\n    { text: \"a valuation of $1 billion or more\", isCorrect: true }\n  ];\n  if (experiment.get(ATTN1_COUNTERBALANCE)) {\n    attn1Options = swapPair(attn1Options);\n  }\n\n  // attn2\n\n  let attn2Options = [\n    {\n      text: \"Dropped out of college\",\n      isCorrect: dataCondition === DATA_GARBAGE_PP\n    },\n    {\n      text: \"Graduated from college\",\n      isCorrect: dataCondition === DATA_GARBAGE_MM\n    }\n  ];\n  if (experiment.get(ATTN2_COUNTERBALANCE)) {\n    attn2Options = swapPair(attn2Options);\n  }\n\n  // attn3\n\n  let attn3CorrectOption;\n  let attn3IncorrectOption;\n  if (didSeeData) {\n    attn3CorrectOption = `Not everyone believes that companies with\n        ${showedFounderType} founders are more likely to become unicorns,\n        and there have been unicorns with founders who\n        ${foundersWhoDidWhat} college.`;\n    attn3IncorrectOption = `Everyone believes that companies with\n        ${showedFounderType} founders are more likely to become unicorns,\n        and there have not been unicorns with founders who\n        ${foundersWhoDidWhat} college.`;\n  } else {\n    // did not see data\n    attn3CorrectOption = `Most people are not sure whether\n        founders who dropped out of college or\n        founders who graduated college are more likely to\n        become founders of unicorn startups.`;\n    attn3IncorrectOption = `It is quite certain to many people that\n        either founders who dropped out of college or\n        founders who graduated college are\n        more likely to become founders of unicorn startups.`;\n  }\n\n  let attn3Options = [\n    { text: attn3CorrectOption, isCorrect: true },\n    { text: attn3IncorrectOption, isCorrect: false }\n  ];\n  if (experiment.get(ATTN3_COUNTERBALANCE)) {\n    attn3Options = swapPair(attn3Options);\n  }\n\n  // attn4\n\n  let attn4Options = [\n    { text: \"True\", isCorrect: true },\n    { text: \"False\", isCorrect: false }\n  ];\n  if (experiment.get(ATTN4_COUNTERBALANCE)) {\n    attn4Options = swapPair(attn4Options);\n  }\n\n  return (\n    <>\n      <p id=\"AttentionCheck\">\n        On the next page we are going to give you information about two other\n        startups and ask you to predict which startup is more likely to be a\n        unicorn. But first we have a few questions for you.\n      </p>\n      <AttentionCheck\n        className=\"attn1\"\n        value={attn1}\n        setter={setAttn1}\n        question={<>A unicorn is a startup that achieves:</>}\n        options={attn1Options}\n      />\n      {!isNull(attn1) && didSeeData && (\n        <AttentionCheck\n          className=\"attn2\"\n          value={attn2}\n          setter={setAttn2}\n          question={\n            <>\n              We showed you a table in which each row had a unicorn and a\n              founder who:\n            </>\n          }\n          options={attn2Options}\n        />\n      )}\n      {(didSeeData ? !isNull(attn2) : !isNull(attn1)) && (\n        <AttentionCheck\n          className=\"attn3\"\n          value={attn3}\n          setter={setAttn3}\n          question={\n            <>\n              Which of the following statements is <b>true</b>?\n            </>\n          }\n          options={attn3Options}\n        />\n      )}\n      {didSeeData && !isNull(attn3) && (\n        <AttentionCheck\n          className=\"attn4\"\n          value={attn4}\n          setter={setAttn4}\n          question={\n            <>\n              The companies shown in the table above were selected because they\n              are unicorns founded by college {showedFounders}:\n            </>\n          }\n          options={attn4Options}\n        />\n      )}\n      <TimeoutButton\n        onClick={onFinish}\n        timeout={500}\n        disabled={!readyToContinue}\n      >\n        Continue\n      </TimeoutButton>\n    </>\n  );\n}\n\nfunction AttentionCheck({ question, className, options, value, setter }) {\n  return (\n    <div className={`${className} ${calloutBoxStyle}`}>\n      <div className=\"msg\">{question}</div>\n      {options.map((option, idx) => (\n        <div\n          key={idx}\n          className={value && value.text === option.text ? \"selected\" : null}\n        >\n          <label>\n            <input\n              type=\"radio\"\n              className=\"AttnCheckOption\"\n              value={option.text}\n              onChange={e => setter(option)}\n              checked={(value && value.text === option.text) || false}\n            />\n            <span>{option.text}</span>\n          </label>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default AttentionChecks;\n","import React from \"react\";\nimport { css } from \"emotion\";\nimport { useContextState, useReadContext } from \"./AppContext\";\nimport { useSmoothScrollTo } from \"./utils\";\n\nexport default function ExplanationStage({ onFinish }) {\n  let [text, setText] = useContextState(\"ExplanationStage\", \"\");\n  let decision = useReadContext(\"DecisionBet\");\n  useSmoothScrollTo(\"ExplanationStage\");\n\n  let pronounValidationError = validateExplanation(text);\n\n  const maxLength = 2500;\n  return (\n    <div id=\"ExplanationStage\">\n      <p>\n        You chose the startup that was <b>founded by a college {decision}</b>.\n      </p>\n      <p>Could you explain the reason(s) why you made this decision?</p>\n      <textarea\n        className={css`\n          width: 500px;\n          height: 100px;\n          font-size: 16px;\n        `}\n        maxLength={maxLength}\n        onChange={e => setText(e.target.value)}\n        value={text}\n      />\n      {pronounValidationError !== null ? (\n        <div className={validationCSS}>\n          It looks like your response refers to{\" \"}\n          <b>\"{pronounValidationError}\"</b> without making a reference to{\" \"}\n          <b>graduates</b> or <b>dropouts</b>. Could you please clarify which\n          you are talking about?\n        </div>\n      ) : null}\n      {text.length > 0.9 * maxLength ? (\n        <div>\n          <small>\n            {text.length} / {maxLength}\n          </small>{\" \"}\n        </div>\n      ) : null}\n      <div>\n        <button onClick={onFinish}>Finish</button>\n      </div>\n    </div>\n  );\n}\n\nlet validationCSS = css`\n  color: #af0000;\n  max-width: 500px;\n  margin: 10px 0;\n`;\n\nfunction validateExplanation(text) {\n  if (text.length <= 20) return null;\n  let triggers = [\"they\", \"them\", \"their\", \"those\", \"person\"];\n  for (let trigger of triggers) {\n    if (text.match(new RegExp(trigger, \"gi\"))) {\n      if (text.match(/grad/gi) || text.match(/drop/gi)) {\n        return null;\n      } else {\n        return trigger;\n      }\n    }\n  }\n  return null;\n}\n","import React, { useContext, useRef, useEffect } from \"react\";\nimport { css } from \"emotion\";\nimport omit from \"lodash/omit\";\nimport flatten from \"flat\";\nimport queryString from \"query-string\";\nimport {\n  DATA_CONDITION,\n  DATA_GARBAGE_PP,\n  DATA_GARBAGE_MM,\n  ORDERING_DATA_GARBAGE_MM,\n  ORDERING_DATA_GARBAGE_PP\n} from \"./conditions\";\nimport { now } from \"./utils\";\nimport { AppContext, useContextState } from \"./AppContext\";\nimport { useSmoothScrollTo } from \"./utils\";\n\nexport default function SubmitPage() {\n  let { appState, getExperiment, tracking } = useContext(AppContext);\n  let submitInputRef = useRef(null);\n  let experiment = getExperiment();\n  let [text, setText] = useContextState(\"FinalComments\", \"\");\n  useSmoothScrollTo(\"SubmitPage\");\n\n  useEffect(() => {\n    let iv = setInterval(() => {\n      submitInputRef.current.value = now();\n    }, 500);\n    return () => clearInterval(iv);\n  }, []);\n\n  let { initialStep, turkSubmitTo, ...parsed } = queryString.parse(\n    window.location.search\n  );\n  let formAction = `${turkSubmitTo}/mturk/externalSubmit`;\n\n  // the total allowable number of typed input characters\n  // this is shared between the \"explanation stage\"\n  // and this \"final comment\" stage.\n  // these are the two uncertain length strings which risk creating\n  // a request size that's too large for MTurk\n  const totalMaxLength = 4000;\n  let maxLength = totalMaxLength - (appState[\"ExplanationStage\"] || \"\").length;\n\n  let expConditions = experiment.getParams();\n  let dataCondition = experiment.get(DATA_CONDITION);\n  let conditions = omit(expConditions, [\n    ORDERING_DATA_GARBAGE_MM,\n    ORDERING_DATA_GARBAGE_PP\n  ]);\n  let order;\n  if (dataCondition === DATA_GARBAGE_PP) {\n    order = expConditions[ORDERING_DATA_GARBAGE_PP];\n  } else if (dataCondition === DATA_GARBAGE_MM) {\n    order = expConditions[ORDERING_DATA_GARBAGE_MM];\n  } /* DATA_NONE */ else {\n    order = [];\n  }\n  let companies = order.map(founderInfo => founderInfo.company);\n  conditions[\"ComputedDataOrdering\"] = companies.join(\",\") || \"[none]\";\n\n  let allSubmitData = flatten({\n    ...parsed, // it is important that the `assignmentId` key exists!\n    e: conditions,\n    s: appState,\n    t: tracking\n  });\n\n  let finishText = \"Submit\";\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    submitInputRef.current.value = now();\n    e.target.submit();\n  }\n\n  return (\n    <div id=\"SubmitPage\">\n      <h2>Thank you!</h2>\n      <p>You must click \"{finishText}\" below to complete the HIT.</p>\n      <p>\n        If you have any comments on this experiment, please leave them below.\n      </p>\n      <textarea\n        className={css`\n          width: 500px;\n          height: 100px;\n          font-size: 16px;\n        `}\n        maxLength={maxLength}\n        onChange={e => setText(e.target.value)}\n        value={text}\n      />\n      {text.length > maxLength * 0.9 ? (\n        <div>\n          <small>\n            {text.length} / {maxLength}\n          </small>\n        </div>\n      ) : null}\n      <form action={formAction} onSubmit={handleSubmit}>\n        {Object.entries(allSubmitData).map(([name, val]) => (\n          <input\n            key={name}\n            type=\"hidden\"\n            name={name}\n            value={val === null ? \"null\" : val}\n          />\n        ))}\n        <input ref={submitInputRef} type=\"hidden\" name=\"t.Submit\" value=\"\" />\n        <input type=\"submit\" value={finishText} disabled={!turkSubmitTo} />\n      </form>\n      {process.env.REACT_APP_DEV === \"true\" ? (\n        <div\n          className={css`\n            margin: 1em 0;\n          `}\n        >\n          <b>Submit data</b>\n          <pre>{JSON.stringify(allSubmitData, null, 2)}</pre>{\" \"}\n        </div>\n      ) : null}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { css } from \"emotion\";\n\nexport default function Table({ className, ...props }) {\n  let tableCSS = css`\n    border-collapse: collapse;\n    border-spacing: 0;\n\n    thead tr {\n      border-bottom: 1px solid black;\n    }\n\n    th,\n    td {\n      padding: 4px 10px;\n    }\n\n    td {\n      text-align: center;\n    }\n  `;\n  return <table className={css([tableCSS, className])} {...props} />;\n}\n","import React from \"react\";\nimport { css } from \"emotion\";\nimport Table from \"./Table\";\nimport {\n  DATA_CONDITION,\n  // data ordering\n  DATA_GARBAGE_PP,\n  DATA_GARBAGE_MM,\n  DATA_NONE,\n  ORDERING_DATA_GARBAGE_PP,\n  ORDERING_DATA_GARBAGE_MM\n} from \"./conditions\";\n\nexport default function DataNarrativeView({ experiment }) {\n  const dataCondition = experiment.get(DATA_CONDITION);\n\n  let tableClass = css`\n    margin: 1em 2em;\n  `;\n\n  let narrative;\n  let dataTable;\n  if (dataCondition === DATA_GARBAGE_PP) {\n    let data = experiment.get(ORDERING_DATA_GARBAGE_PP);\n    dataTable = (\n      <Table className={tableClass}>\n        <thead>\n          <tr>\n            <th>Company</th>\n            <th>Co-founder</th>\n            <th>Dropped out?</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((row, i) => (\n            <tr key={i}>\n              <td>{row.company}</td>\n              <td>{row.founder}</td>\n              <td>Yes</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    );\n    narrative = (\n      <>\n        Some people believe that a startup is more likely to become a unicorn if\n        it is founded by someone who has dropped out of college (that is, they\n        did not graduate). Not everyone believes this, of course, and there are\n        plenty of examples of unicorn startups whose founders graduated from\n        college. But here are some companies that we chose to show you because\n        they are unicorns founded by college dropouts.\n      </>\n    );\n  } else if (dataCondition === DATA_GARBAGE_MM) {\n    let data = experiment.get(ORDERING_DATA_GARBAGE_MM);\n    dataTable = (\n      <Table className={tableClass}>\n        <thead>\n          <tr>\n            <th>Company</th>\n            <th>Co-founder</th>\n            <th>Graduated?</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((row, i) => (\n            <tr key={i}>\n              <td>{row.company}</td>\n              <td>{row.founder}</td>\n              <td>Yes</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    );\n    narrative = (\n      <>\n        Some people believe that a startup is more likely to become a unicorn if\n        it is founded by someone who has graduated from college (that is, they\n        did not drop out). Not everyone believes this, of course, and there are\n        plenty of examples of unicorn startups whose founders dropped out of\n        college. But here are some companies that we chose to show you because\n        they are unicorns founded by college graduates.\n      </>\n    );\n  } else if (dataCondition === DATA_NONE) {\n    narrative = (\n      <>\n        People debate whether startup companies whose founders dropped out of\n        college (that is, did not graduate) are more or less likely to become\n        unicorns.\n      </>\n    );\n  }\n  return (\n    <>\n      <p>{narrative}</p>\n      {dataTable}\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { css } from \"emotion\";\nimport queryString from \"query-string\";\nimport omit from \"lodash/omit\";\nimport UnicornExperiment from \"./PlanOut\";\nimport IntroView from \"./IntroView\";\nimport ExperimentView from \"./ExperimentView\";\nimport AttentionCheck from \"./AttentionCheck\";\nimport ExplanationStage from \"./ExplanationStage\";\nimport SubmitPage from \"./SubmitPage\";\nimport DecisionExperiment from \"./DecisionExperiment\";\nimport DataNarrativeView from \"./DataNarrativeView\";\nimport TimeoutButton from \"./TimeoutButton\";\nimport {\n  // names\n  DATA_CONDITION,\n  // data conditions\n  DATA_GARBAGE_MM,\n  DATA_GARBAGE_PP,\n  DATA_NONE,\n  ORDERING_DATA_GARBAGE_MM,\n  ORDERING_DATA_GARBAGE_PP,\n  // other\n  QUESTION_DROPOUT_FIRST,\n  ATTN1_COUNTERBALANCE,\n  ATTN2_COUNTERBALANCE,\n  ATTN3_COUNTERBALANCE,\n  ATTN4_COUNTERBALANCE,\n  AGREERAND_COUNTERBALANCE\n} from \"./conditions\";\nimport { AppContextProvider } from \"./AppContext\";\nimport { randomString, oneWayHash } from \"./utils\";\n\nconst STEP_INTRO = \"INTRO\";\nconst STEP_PRE_EXPERIMENT_DATA = \"PRE_EXPERIMENT_DATA\";\nconst STEP_ATTENTION_CHECK = \"ATTENTION_CHECK\";\nconst STEP_EXPERIMENT = \"EXPERIMENT\";\nconst STEP_EXPLANATION = \"EXPLANATION\";\nconst STEP_FINAL = \"FINAL\";\n\nexport default function App() {\n  let [appState, setAppState] = useState({});\n  let [tracking, setTracking] = useState({});\n  let [showDebug, setShowDebug] = useState(\n    process.env.REACT_APP_DEV === \"true\"\n  );\n  let [step, setStep] = useState(STEP_INTRO);\n\n  let parsed = queryString.parse(window.location.search);\n  let hitNotAccepted = parsed.assignmentId === \"ASSIGNMENT_ID_NOT_AVAILABLE\";\n  let hitAccepted =\n    parsed.assignmentId !== undefined &&\n    parsed.workerId !== undefined &&\n    !hitNotAccepted;\n\n  let WORKER_ID = parsed.workerId || \"none\";\n\n  let hashedWorkerId = oneWayHash(WORKER_ID);\n\n  let exp = new UnicornExperiment({ userId: hashedWorkerId });\n  function getExperiment() {\n    return exp;\n  }\n\n  useEffect(() => {\n    setAppState({ ...appState, UA: btoa(navigator.userAgent), hashedWorkerId });\n  }, []);\n\n  useEffect(() => {\n    if (process.env.REACT_APP_DEV === \"true\" && parsed.initialStep) {\n      setStep(parsed.initialStep);\n    }\n  }, []);\n\n  let appStage;\n  switch (step) {\n    case STEP_INTRO:\n      appStage = (\n        <IntroView\n          hitAccepted={hitAccepted}\n          onComplete={e => setStep(STEP_PRE_EXPERIMENT_DATA)}\n        />\n      );\n      break;\n    case STEP_PRE_EXPERIMENT_DATA:\n      appStage = (\n        <ExperimentView>\n          <DataNarrativeView experiment={exp} />\n          <TimeoutButton\n            onClick={e => setStep(STEP_ATTENTION_CHECK)}\n            timeout={process.env.REACT_APP_DEV === \"true\" ? 500 : 3000}\n          >\n            Continue\n          </TimeoutButton>\n        </ExperimentView>\n      );\n      break;\n    case STEP_ATTENTION_CHECK:\n      appStage = (\n        <ExperimentView>\n          <DataNarrativeView experiment={exp} />\n          <AttentionCheck\n            experiment={exp}\n            onFinish={e => setStep(STEP_EXPERIMENT)}\n          />\n        </ExperimentView>\n      );\n      break;\n    case STEP_EXPERIMENT:\n      appStage = (\n        <ExperimentView>\n          <DataNarrativeView experiment={exp} />\n          <DecisionExperiment\n            experiment={exp}\n            onContinue={e => setStep(STEP_EXPLANATION)}\n          />\n        </ExperimentView>\n      );\n      break;\n    case STEP_EXPLANATION:\n      appStage = <ExplanationStage onFinish={e => setStep(STEP_FINAL)} />;\n      break;\n    case STEP_FINAL:\n      appStage = <SubmitPage />;\n      break;\n    default:\n      appStage = (\n        <div>\n          <h2>Error</h2>\n        </div>\n      );\n  }\n\n  const setExperiment = (condName, desiredValue) => {\n    if (process.env.REACT_APP_DEV !== \"true\") {\n      return null;\n    }\n    let userId;\n    let randChar = () => randomString().slice(0, 3);\n    let attempts = 1000;\n\n    let allConditions = new Set(Object.keys(exp.getParams()));\n    // ignore the condition we're trying to change\n    allConditions.delete(condName);\n    // ignore the ordering conditions\n    allConditions.delete(ORDERING_DATA_GARBAGE_MM);\n    allConditions.delete(ORDERING_DATA_GARBAGE_PP);\n    // these are the \"old conditions\" we want to preserve\n    let oldConditions = [...allConditions];\n\n    let newCondMatches = newExp => newExp.get(condName) === desiredValue;\n\n    let oldCondsMatch = newExp => {\n      let ret = oldConditions.map(c => {\n        let oldCondValue = exp.get(c);\n        let newCondValue = newExp.get(c);\n        return oldCondValue === newCondValue;\n      });\n      return ret.every(Boolean);\n    };\n\n    while (attempts >= 0) {\n      userId = randChar();\n      let ex = new UnicornExperiment({ userId: oneWayHash(userId) });\n      let newMatches = newCondMatches(ex);\n      let oldMatches = oldCondsMatch(ex);\n      if (newMatches && oldMatches) {\n        let newParams = {\n          ...parsed,\n          workerId: userId,\n          initialStep: step\n        };\n        let newQS = queryString.stringify(newParams);\n        window.location.search = newQS;\n        attempts = 0;\n      }\n      attempts--;\n    }\n  };\n\n  return (\n    <AppContextProvider\n      value={{ appState, setAppState, getExperiment, tracking, setTracking }}\n    >\n      <div className={AppCSS}>\n        <h1>Predicting unicorns</h1>\n        {process.env.REACT_APP_DEV === \"true\" && showDebug ? (\n          <div className={debugPanel}>\n            <DebugSkipState step={step} setStep={setStep} />\n            <DebugShowConditions exp={exp} setExperiment={setExperiment} />\n            <button\n              className=\"hideDebugPanel\"\n              onClick={() => setShowDebug(false)}\n            >\n              Hide debug panels\n            </button>\n          </div>\n        ) : null}\n        {appStage}\n        {process.env.REACT_APP_DEV === \"true\" && showDebug ? (\n          <>\n            <pre className={debugPanel}>\n              <b>Parameters</b> {JSON.stringify(parsed, null, 2)}\n              <br />\n              <b>Conditions</b> (excludes data ordering){\" \"}\n              {JSON.stringify(expParams(exp), null, 2)}\n              <br />\n              <b>User state</b> {JSON.stringify(omit(appState, \"UA\"), null, 2)}\n              <br />\n              <b>Tracking state</b> {JSON.stringify(tracking, null, 2)}\n            </pre>\n          </>\n        ) : null}\n      </div>\n    </AppContextProvider>\n  );\n}\n\nfunction expParams(exp) {\n  return omit(exp.getParams(), [\n    \"ORDERING_DATA_GARBAGE_PP\",\n    \"ORDERING_DATA_GARBAGE_MM\"\n  ]);\n}\n\nlet AppCSS = css`\n  max-width: 1000px;\n  padding: 0 10px;\n  margin: 0 auto;\n  h1 {\n    margin-bottom: 0.4em;\n  }\n`;\n\nlet debugPanel = css`\n  margin: 1em 0;\n  padding: 1em;\n  background-color: #efefef;\n`;\n\nfunction DebugSkipState({ step, setStep }) {\n  let steps = [\n    STEP_INTRO,\n    STEP_PRE_EXPERIMENT_DATA,\n    STEP_ATTENTION_CHECK,\n    STEP_EXPERIMENT,\n    STEP_EXPLANATION,\n    STEP_FINAL\n  ];\n  return (\n    <div className={styleMultiSelect}>\n      <b>Skip to stage:</b>\n      <span className=\"ChoiceList\">\n        {steps.map(s => (\n          <label key={s}>\n            <input\n              type=\"radio\"\n              name={s}\n              onChange={e => setStep(s)}\n              checked={step === s}\n            />\n            {s}\n          </label>\n        ))}\n      </span>\n    </div>\n  );\n}\n\nfunction DebugShowConditions({ exp, setExperiment }) {\n  let RadioChoices = ({ cond, choices }) => {\n    let state = exp.get(cond);\n    return (\n      <span className=\"ChoiceList\">\n        {choices.map(([label, value], i) => (\n          <label key={i}>\n            <input\n              type=\"radio\"\n              name={label}\n              onChange={e => setExperiment(cond, value)}\n              checked={state === value}\n            />\n            {label}\n          </label>\n        ))}\n      </span>\n    );\n  };\n\n  let BinaryChoice = ({ cond }) => {\n    let isChecked = exp.get(cond);\n    return (\n      <label>\n        <input\n          name={cond}\n          type=\"checkbox\"\n          checked={isChecked}\n          onChange={e => setExperiment(cond, !isChecked)}\n        />\n      </label>\n    );\n  };\n\n  let addRandomHITParams = () => {\n    let workerId = randomString().slice(0, 3);\n    window.location.search = queryString.stringify({\n      workerId,\n      assignmentId: \"test\"\n    });\n  };\n\n  return (\n    <>\n      <div className={styleMultiSelect}>\n        <b>Data conditions:</b>\n        <RadioChoices\n          cond={DATA_CONDITION}\n          choices={[\n            [\"Garbage ++\", DATA_GARBAGE_PP],\n            [\"No data\", DATA_NONE],\n            [\"Garbage --\", DATA_GARBAGE_MM]\n          ]}\n        />\n      </div>\n      <div className={styleMultiSelect}>\n        <b>Attention 1 counterbalance:</b>\n        <BinaryChoice cond={ATTN1_COUNTERBALANCE} />\n      </div>\n      <div className={styleMultiSelect}>\n        <b>Attention 2 counterbalance:</b>\n        <BinaryChoice cond={ATTN2_COUNTERBALANCE} />\n      </div>\n      <div className={styleMultiSelect}>\n        <b>Attention 3 counterbalance:</b>\n        <BinaryChoice cond={ATTN3_COUNTERBALANCE} />\n      </div>\n      <div className={styleMultiSelect}>\n        <b>Attention 4 counterbalance:</b>\n        <BinaryChoice cond={ATTN4_COUNTERBALANCE} />\n      </div>\n      <div className={styleMultiSelect}>\n        <b>Ask dropout first:</b>\n        <BinaryChoice cond={QUESTION_DROPOUT_FIRST} />\n      </div>\n      <div className={styleMultiSelect}>\n        <b>Agree random counterbalance:</b>\n        <BinaryChoice cond={AGREERAND_COUNTERBALANCE} />\n      </div>\n      <div>\n        <button onClick={addRandomHITParams}>Add random HIT parameters</button>\n      </div>\n    </>\n  );\n}\n\nlet styleMultiSelect = css`\n  b:first-of-type {\n    display: inline-block;\n    min-width: 160px;\n  }\n  label {\n    display: inline-block;\n    padding: 2px 3px;\n  }\n  button {\n    margin: 1em 0;\n  }\n`;\n","import \"react-app-polyfill/ie9\";\nimport \"core-js/modules/es.object.keys\";\nimport \"core-js/modules/es.object.values\";\nimport \"core-js/modules/es.object.entries\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}